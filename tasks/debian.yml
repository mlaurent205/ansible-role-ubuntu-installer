---
- name: configure isolinux
  lineinfile:
    path: "{{ tmpdir_dest.path }}/isolinux/isolinux.cfg"
    regexp: 'timeout\s+[0-9]+'
    line: 'timeout 1'

- name: register seed file
  set_fact:
    seed_file: ubuntu.seed

- name: create seed file
  template:
    src: "{{ ubuntu_seed_template }}"
    dest: "{{ tmpdir_dest.path }}/{{ seed_file }}"
  vars:
    hostname: "{{ ubuntu_installer_hostname | split_with('.') | head }}"
    domain: "{{ ubuntu_installer_hostname | split_with('.') | tail | join('.') }}"
    timezone: "{{ ubuntu_installer_timezone }}"
    username: "{{ ubuntu_installer_username }}"
    password: "{{ ubuntu_installer_password }}"
    sshkey: "{{ ubuntu_installer_sshkey }}"
    late_command: "{{ ubuntu_installer_late_command | default('') }}"
    interface: "{{ ubuntu_installer_interface }}"
    disk: "{{ ubuntu_installer_disk | default('') }}"
    halt: "{{ ubuntu_installer_halt | default('false') }}"
    mirror: "{{ ubuntu_mirror }}"
    security_mirror: "{{ ubuntu_security_mirror }}"
    partman_method: "{{ ubuntu_partman_method }}"
    ntp_server: "{{ ubuntu_ntp_server }}"
    packages: "{{ ubuntu_installer_image_packages }}"

- name: retrieve seed file checksum
  command: "md5sum {{ tmpdir_dest.path }}/{{ seed_file }}"
  register: seed_md5sum
  changed_when: false

- name: check isolinux boot file location
  command: "find {{ tmpdir_dest.path }} -maxdepth 2 -name txt.cfg"
  register: isolinux_bootdest
  changed_when: false

- name: check vmlinuz boot file location
  command: "find {{ tmpdir_dest.path }} -maxdepth 2 -name vmlinuz -type f"
  register: vmlinuz_bootdest
  changed_when: false

- name: check initrd boot file location
  command: "find {{ tmpdir_dest.path }} -maxdepth 2 -name initrd.gz -type f"
  register: initrd_bootdest
  changed_when: false

- name: compute isolinux file locations
  set_fact:
    vmlinuz_path: "{{ vmlinuz_bootdest.stdout | regex_replace(tmpdir_dest.path, '') }}"
    initrd_path: "{{ initrd_bootdest.stdout | regex_replace(tmpdir_dest.path, '') }}"

- name: set bootloader preseed configuration
  template:
    src: isolinux.debian.txt.j2
    dest: "{{ tmpdir_dest.path }}/isolinux/txt.cfg"
  vars:
    kernel_file: "{{ vmlinux_path }}"
    initrd_file: "{{ initrd_path }}"
    preseed_url: "{{ ubuntu_preseed_url | default('') }}"
    preseed_file: "{{ seed_file }}"
    preseed_checksum: "{{ seed_md5sum.stdout | split_with(' ') | first }}"

- name: check isolinux bin file location
  command: "find {{ tmpdir_dest.path }} -maxdepth 2 -name isolinux.bin"
  register: isolinux_bindest
  changed_when: false

- name: check isolinux boot cat file location
  command: "find {{ tmpdir_dest.path }} -maxdepth 2 -name boot.cat"
  register: isolinux_bootcatdest
  changed_when: false

- name: compute isolinux bin
  set_fact:
    isolinux_bin: "{{ isolinux_bindest.stdout | regex_replace(tmpdir_dest.path + '/', '') }}"
    isolinux_cat: "{{ isolinux_bootcatdest.stdout | regex_replace(tmpdir_dest.path + '/', '') }}"

- name: create ubuntu autoinstall iso
  command: "mkisofs {{ mkisofs_options }} -V 'ubuntu' -b {{ isolinux_bin }} -c {{ isolinux_cat }} -o {{ ubuntu_installer_target_dir }}/{{ ubuntu_installer_hostname }}.iso ."
  args:
    chdir: "{{ tmpdir_dest.path }}"
  vars:
    mkisofs_options: "-J -r -l -cache-inodes -joliet-long -no-emul-boot -boot-load-size 4 -boot-info-table -iso-level 4"
  changed_when: false
  tags:
    - skip_ansible_lint

- name: make iso bootable
  command: "isohybrid {{ ubuntu_installer_target_dir }}/{{ ubuntu_installer_hostname }}.iso"
  changed_when: false
