---
- name: include variable overrides
  include_vars: "{{ item }}"
  with_first_found:
    - files:
        - "vars/{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml"
        - "vars/{{ ansible_distribution }}.yml"
        - "vars/{{ ansible_os_family }}.yml"
      skip: true

- name: install packages
  become: yes
  package:
    name: "{{ item }}"
    state: "{{ ubuntu_installer_package_state }}"
  with_items: "{{ ubuntu_installer_package_names }}"

- name: inspect current user
  command: whoami
  changed_when: false
  register: inspect_username

- name: define target user
  set_fact:
    target_username: "{{ inspect_username.stdout }}"

- name: inspect current user pass
  command: "getent shadow {{ inspect_username.stdout }}"
  become: yes
  changed_when: false
  register: inspect_password

- name: define target password
  set_fact:
    target_password: "{{ inspect_password.stdout | split_with(':') | tail | head }}"

- name: create ssh key for current user 
  command: "ssh-keygen -b 2048 -t rsa -f ~{{ target_username }}/.ssh/id_rsa.pub -q -N ''"
  args:
    creates: "~{{ target_username }}/.ssh/id_rsa.pub"
  when:
    - (ubuntu_installer_sshkey is none) or (ubuntu_installer_sshkey | trim == '')

- name: inspect current user ssh key
  command: "cat ~{{ target_username }}/.ssh/id_rsa.pub"
  register: inspect_sshkey
  changed_when: false

- name: define default ssh key
  set_fact:
    target_sshkey: "{{ inspect_sshkey.stdout }}"

- name: create temporary target directory
  tempfile:
    state: directory
    prefix: iso
  register: tmpdir_dest
  changed_when: false

- name: create image target directory
  file:
    state: directory
    path: "{{ ubuntu_installer_target_dir }}"

- name: register source ubuntu iso file
  set_fact:
    src_iso: "{{ ubuntu_installer_target_dir }}/ubuntu.{{ ubuntu_installer_release }}.iso"

- name: fetch ubuntu source iso
  get_url:
    url: "http://releases.ubuntu.com/{{ ubuntu_installer_release }}/ubuntu-{{ ubuntu_installer_release }}-server-amd64.iso"
    dest: "{{ src_iso }}"

- name: extract ubuntu source iso
  command: "7z x {{ src_iso }}"
  args:
    chdir: "{{ tmpdir_dest.path }}"
  changed_when: false
  become: yes

- name: define installation menu language
  copy:
    dest: "{{ tmpdir_dest.path }}/isolinux/lang"
    content: en
  become: yes
  changed_when: false

- name: configure isolinux
  lineinfile:
    path: "{{ tmpdir_dest.path }}/isolinux/isolinux.cfg"
    regexp: 'timeout\s+[0-9]+'
    line: 'timeout 1'
  become: yes
  changed_when: false

- name: register seed file
  set_fact:
    seed_file: "ubuntu.seed"

- name: create seed file
  template:
    src: ubuntu.seed.j2
    dest: "{{ tmpdir_dest.path }}/{{ seed_file }}"
  vars:
    hostname: "{{ ubuntu_installer_hostname | split_with('.') | head }}"
    domain: "{{ ubuntu_installer_hostname | split_with('.') | tail | join('.') }}"
    timezone: "{{ ubuntu_installer_timezone | default('America/Costa_Rica') }}"
    username: "{{ ubuntu_installer_username | default(target_username) }}"
    password: "{{ ubuntu_installer_password | default(target_password) }}"
    sshkey: "{{ ubuntu_installer_sshkey | default(target_sshkey) }}"
    late_command: "{{ ubuntu_installer_late_command | default('') }}"
    interface: "{{ ubuntu_installer_interface }}"
    disk: "{{ ubuntu_installer_disk | default('') }}"
  become: yes
  changed_when: false

- name: retrieve seed file checksum
  command: "md5sum {{ tmpdir_dest.path }}/{{ seed_file }}"
  register: seed_md5sum
  changed_when: false

- name: set bootloader preseed configuration
  template:
    src: isolinux.txt.j2
    dest: "{{ tmpdir_dest.path }}/isolinux/txt.cfg"
  vars:
    preseed_file: "{{ seed_file }}"
    preseed_checksum: "{{ seed_md5sum.stdout | split_with(' ') | first }}"
  become: yes
  changed_when: false

- name: create ubuntu autoinstall iso
  command: "mkisofs -D -r -V '{{ ubuntu_host }}' -cache-inodes -J -cache-inodes -J -l -b isolinux/isolinux.bin -c isolinux/boot.cat -no-emul-boot -boot-load-size 4 -boot-info-table -o /tmp/{{ ubuntu_host }}.iso ."
  args:
    chdir: "{{ tmpdir_dest.path }}"
  become: yes
  changed_when: false

- name: archive ubuntu autoinstall iso
  command: "cp /tmp/{{ ubuntu_host }}.iso {{ ubuntu_installer_target_dir }}/{{ ubuntu_host }}.iso"
  tags:
    - skip_ansible_lint

- name: make iso bootable
  command: "isohybrid {{ ubuntu_installer_target_dir }}/{{ ubuntu_host }}.iso"
  become: yes

- name: remove temporary directories
  file:
    path: "{{ tmpitem }}"
    state: absent
  with_items:
    - "{{ tmpdir_dest.path }}"
    - "/tmp/{{ ubuntu_host }}.iso"
  loop_control:
    loop_var: tmpitem
  become: yes
  changed_when: false
