---
- name: include variable overrides
  include_vars: "{{ item }}"
  with_first_found:
    - files:
        - "vars/{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml"
        - "vars/{{ ansible_distribution }}.yml"
        - "vars/{{ ansible_os_family }}.yml"
      skip: true

- name: install packages
  become: yes
  package:
    name: "{{ item }}"
    state: "{{ ubuntu_installer_package_state }}"
  with_items: "{{ ubuntu_installer_packages | default(ubuntu_installer_packages_default) }}"

- name: create temporary target directory
  tempfile:
    state: directory
    prefix: iso
  register: tmpdir_dest
  changed_when: false

- name: create image target directory
  file:
    state: directory
    path: "{{ ubuntu_installer_target_dir }}"

- name: register source ubuntu url
  set_fact:
    src_url: "http://releases.ubuntu.com/{{ ubuntu_installer_release }}/ubuntu-{{ ubuntu_installer_release }}-server-amd64.iso"

- name: register source ubuntu iso file
  set_fact:
    src_iso: "{{ ubuntu_installer_target_dir }}/ubuntu.{{ ubuntu_installer_release }}.iso"

- name: fetch ubuntu source iso
  get_url:
    url: "{{ ubuntu_installer_image_url | default(src_url) }}"
    dest: "{{ src_iso }}"

- name: create temporary mount fstab
  tempfile:
    state: directory
    prefix: fstab
  register: mntfile_dest
  changed_when: false

- name: create temporary mount directory
  tempfile:
    state: directory
    prefix: mnt
  register: mntdir_dest
  changed_when: false

- name: mount centos source iso
  mount:
    src: "{{ iso_path }}" 
    path: "{{ mntdir_dest.path }}"
    state: mounted
    opts: loop
    fstype: iso9660
  changed_when: false
  become: yes

- name: extract source iso files
  command: "rsync -a {{ mntdir_dest.path }}/ {{ tmpdir_dest.path }}/"
  become: yes
  changed_when: false

- name: unmount centos source iso
  mount:
    src: "{{ iso_path }}"
    path: "{{ mntdir_dest.path }}"
    state: unmounted
    opts: loop
  changed_when: false
  become: yes

- name: remove temporary mount directory
  file:
    path: "{{ mntdir_dest.path }}"
    state: absent
  become: yes
  changed_when: false

- name: remove temporary mount fstab
  file:
    path: "{{ mntfile_dest.path }}"
    state: absent
  become: yes
  changed_when: false

- name: check isolinux configuration file location
  command: "find {{ tmpdir_dest.path }} -maxdepth 2 -name isolinux.cfg"
  register: isolinux_cfgdest
  become: yes
  changed_when: false

- name: configure isolinux
  lineinfile:
    path: "{{ isolinux_cfgdest.stdout }}"
    regexp: 'timeout\s+[0-9]+'
    line: 'timeout 1'
  become: yes
  changed_when: false

- name: register seed file
  set_fact:
    seed_file: "{{ ubuntu_seed_file }}"

- name: create seed file
  template:
    src: "{{ ubuntu_seed_template }}"
    dest: "{{ tmpdir_dest.path }}/{{ seed_file }}"
  vars:
    hostname: "{{ ubuntu_installer_hostname | split_with('.') | head }}"
    domain: "{{ ubuntu_installer_hostname | split_with('.') | tail | join('.') }}"
    timezone: "{{ ubuntu_installer_timezone }}"
    username: "{{ ubuntu_installer_username }}"
    password: "{{ ubuntu_installer_password }}"
    sshkey: "{{ ubuntu_installer_sshkey }}"
    late_command: "{{ ubuntu_installer_late_command | default('') }}"
    interface: "{{ ubuntu_installer_interface }}"
    disk: "{{ ubuntu_installer_disk | default('') }}"
    halt: "{{ ubuntu_installer_halt | default('false') }}"
    mirror: "{{ ubuntu_mirror }}"
    security_mirror: "{{ ubuntu_security_mirror }}"
  become: yes
  changed_when: false

- name: retrieve seed file checksum
  command: "md5sum {{ tmpdir_dest.path }}/{{ seed_file }}"
  register: seed_md5sum
  changed_when: false

- name: check isolinux boot file location
  command: "find {{ tmpdir_dest.path }} -maxdepth 2 -name txt.cfg"
  register: isolinux_bootdest
  become: yes
  changed_when: false

- name: set bootloader preseed configuration
  template:
    src: isolinux.txt.j2
    dest: "{{ isolinux_bootdest.stdout }}"
  vars:
    preseed_url: "{{ ubuntu_preseed_url | default('') }}"
    preseed_file: "{{ seed_file }}"
    preseed_checksum: "{{ seed_md5sum.stdout | split_with(' ') | first }}"
  become: yes
  changed_when: false

- name: check isolinux bin file location
  command: "find {{ tmpdir_dest.path }} -maxdepth 2 -name isolinux.bin"
  register: isolinux_bindest
  become: yes
  changed_when: false

- name: check isolinux boot cat file location
  command: "find {{ tmpdir_dest.path }} -maxdepth 2 -name boot.cat"
  register: isolinux_bootcatdest
  become: yes
  changed_when: false

- name: compute isolinux bin
  set_fact:
    isolinux_bin: "{{ isolinux_bindest.stdout | regex_replace(tmpdir_dest.path + '/', '') }}"
    isolinux_cat: "{{ isolinux_bootcatdest.stdout | regex_replace(tmpdir_dest.path + '/', '') }}"

- name: create ubuntu autoinstall iso
  command: "mkisofs -D -r -V 'ubuntu' -cache-inodes -J -cache-inodes -J -l -b {{ isolinux_bin }} -c {{ isolinux_cat }} -no-emul-boot -boot-load-size 4 -boot-info-table -o {{ ubuntu_installer_target_dir }}/{{ ubuntu_installer_hostname }}.iso ."
  args:
    chdir: "{{ tmpdir_dest.path }}"
  become: yes
  changed_when: false

- name: make iso bootable
  command: "isohybrid {{ ubuntu_installer_target_dir }}/{{ ubuntu_installer_hostname }}.iso"
  become: yes
  changed_when: false

- name: remove temporary directories
  file:
    path: "{{ tmpdir_dest.path }}"
    state: absent
  become: yes
  changed_when: false
