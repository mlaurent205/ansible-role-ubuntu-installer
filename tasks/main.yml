---
- name: install packages
  package:
    name: "{{ ubuntu_installer_packages }}"
    state: "{{ ubuntu_installer_package_state }}"

- name: detect echo binary
  stat:
    path: "/usr/bin/echo"
  register: binary_linux

- name: echo binary standardization
  file:
    src: "/bin/echo"
    dest: "/usr/bin/echo"
    state: link
  when: not (binary_linux.stat.exists | bool)

- name: create temporary target directory
  tempfile:
    state: directory
    prefix: iso
  register: tmpdir_dest

- name: create image target directory
  file:
    state: directory
    path: "{{ ubuntu_installer_target_dir }}"

- name: fetch ubuntu source iso
  get_url:
    url: "{{ ubuntu_installer_image_url }}"
    dest: "{{ ubuntu_installer_iso_path }}"

- name: create temporary mount fstab
  tempfile:
    state: directory
    prefix: fstab
  register: mntfile_dest

- name: create temporary mount directory
  tempfile:
    state: directory
    prefix: mnt
  register: mntdir_dest

- name: mount ubuntu source iso
  mount:
    src: "{{ ubuntu_installer_iso_path }}"
    path: "{{ mntdir_dest.path }}"
    state: mounted
    opts: loop
    fstype: iso9660

- name: copy iso files
  command: "cp -a {{ mntdir_dest.path }}/. {{ tmpdir_dest.path }}/"
  args:
    warn: no
  tags:
    - skip_ansible_lint

- name: unmount ubuntu source iso
  mount:
    src: "{{ ubuntu_installer_iso_path }}"
    path: "{{ mntdir_dest.path }}"
    state: absent
    opts: loop

- name: remove ubuntu source iso
  file:
    path: "{{ ubuntu_installer_iso_path }}"
    state: absent

- name: remove temporary mount directory
  file:
    path: "{{ mntdir_dest.path }}"
    state: absent

- name: detect debian installer
  stat:
    path: "{{ tmpdir_dest.path }}/dists/bionic/main/debian-installer"
  register: debian_installer

- name: set autodetected installer type
  set_fact:
    ubuntu_installer_type_default: "{{ (debian_installer.stat.exists | bool) | ternary('debian', 'live') }}"

  when: ubuntu_installer_type is not defined

- name: remove temporary mount fstab
  file:
    path: "{{ mntfile_dest.path }}"
    state: absent

- name: verify installer type
  fail:
    msg: "{{ ubuntu_installer_type | default(ubuntu_installer_type_default) }} must be one of ['debian', 'live']"
  when: (ubuntu_installer_type | default(ubuntu_installer_type_default)) not in ['debian', 'live']

- include_tasks: "{{ ubuntu_installer_type | default(ubuntu_installer_type_default) }}.yml"

- name: remove temporary directories
  file:
    path: "{{ tmpdir_dest.path }}"
    state: absent
